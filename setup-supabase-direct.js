import { createClient } from '@supabase/supabase-js';

// Yeni Supabase client olu≈ütur (service role key ile)
const supabase = createClient(
  'https://qdyezbtbmkwibedukdml.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFkeWV6YnRibWt3aWJlZHVrZG1sIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MTUyMDMzOSwiZXhwIjoyMDc3MDk2MzM5fQ.GZmVdOFzmJB4iFfsbZ730t4JDLZ07vYG6YL9O6cFt7k',
  {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  }
);

async function setupDatabase() {
  try {
    console.log('üöÄ Veritabanƒ± ≈üemasƒ± olu≈üturuluyor...');

    // 1. User Profiles tablosu
    console.log('üìù User profiles tablosu olu≈üturuluyor...');
    const { error: userProfilesError } = await supabase
      .from('user_profiles')
      .select('id')
      .limit(1);

    if (userProfilesError && userProfilesError.code === 'PGRST116') {
      // Tablo yok, olu≈ütur
      const { error } = await supabase.rpc('exec', {
        sql: `
          CREATE TABLE public.user_profiles (
              id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,
              first_name TEXT NOT NULL,
              last_name TEXT NOT NULL,
              email TEXT NOT NULL UNIQUE,
              is_admin BOOLEAN DEFAULT FALSE,
              created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
              updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
          );
        `
      });
      if (error) console.log('User profiles tablo hatasƒ±:', error);
      else console.log('‚úÖ User profiles tablosu olu≈üturuldu');
    }

    // 2. Subjects tablosu
    console.log('üìù Subjects tablosu olu≈üturuluyor...');
    const { error: subjectsError } = await supabase
      .from('subjects')
      .select('id')
      .limit(1);

    if (subjectsError && subjectsError.code === 'PGRST116') {
      // Tablo yok, olu≈ütur
      const { error } = await supabase.rpc('exec', {
        sql: `
          CREATE TABLE public.subjects (
              id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
              name TEXT NOT NULL,
              description TEXT,
              icon_name TEXT,
              created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
              updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
          );
        `
      });
      if (error) console.log('Subjects tablo hatasƒ±:', error);
      else console.log('‚úÖ Subjects tablosu olu≈üturuldu');
    }

    // √ñrnek verileri ekle
    console.log('üìù √ñrnek veriler ekleniyor...');
    const { data: existingSubjects } = await supabase
      .from('subjects')
      .select('id')
      .limit(1);

    if (!existingSubjects || existingSubjects.length === 0) {
      const { error: insertError } = await supabase
        .from('subjects')
        .insert([
          {
            id: '550e8400-e29b-41d4-a716-446655440001',
            name: 'Anayasa Hukuku',
            description: 'Temel anayasal kavramlar, devlet yapƒ±sƒ± ve temel haklar.',
            icon_name: 'BookOpenIcon'
          },
          {
            id: '550e8400-e29b-41d4-a716-446655440002',
            name: 'ƒ∞dare Hukuku',
            description: 'ƒ∞darenin yapƒ±sƒ±, i≈üleyi≈üi ve idari i≈ülemler.',
            icon_name: 'BookOpenIcon'
          },
          {
            id: '550e8400-e29b-41d4-a716-446655440003',
            name: 'Ceza Hukuku',
            description: 'Su√ß ve ceza kavramlarƒ±, genel ve √∂zel h√ºk√ºmler.',
            icon_name: 'BookOpenIcon'
          },
          {
            id: '550e8400-e29b-41d4-a716-446655440004',
            name: 'Ceza Muhakemesi Hukuku',
            description: 'Soru≈üturma, kovu≈üturma ve yargƒ±lama s√ºre√ßleri.',
            icon_name: 'BookOpenIcon'
          },
          {
            id: '550e8400-e29b-41d4-a716-446655440005',
            name: 'Genel K√ºlt√ºr',
            description: 'Tarih, coƒürafya, edebiyat ve genel bilgiler.',
            icon_name: 'BookOpenIcon'
          }
        ]);

      if (insertError) {
        console.log('√ñrnek veri ekleme hatasƒ±:', insertError);
      } else {
        console.log('‚úÖ √ñrnek veriler ba≈üarƒ±yla eklendi!');
      }
    }

    console.log('üéâ Supabase veritabanƒ± kurulumu tamamlandƒ±!');

  } catch (error) {
    console.error('‚ùå Genel hata:', error);
  }
}

// Kurulumu ba≈ülat
setupDatabase();