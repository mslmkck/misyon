const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function testRegistration() {
  console.log('üß™ Kayƒ±t i≈ülemi test ediliyor...');
  
  const testEmail = `test${Date.now()}@example.com`;
  const testPassword = 'test123456';
  
  try {
    // 1. Yeni kullanƒ±cƒ± kaydƒ±
    console.log('üìù Yeni kullanƒ±cƒ± kaydediliyor:', testEmail);
    
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          first_name: 'Test',
          last_name: 'User'
        }
      }
    });

    if (authError) {
      console.log('‚ùå Kayƒ±t hatasƒ±:', authError.message);
      return;
    }

    console.log('‚úÖ Auth kullanƒ±cƒ±sƒ± olu≈üturuldu:', authData.user?.id);

    // 2. Profil olu≈üturma
    if (authData.user) {
      console.log('üë§ Kullanƒ±cƒ± profili olu≈üturuluyor...');
      
      const { data: profileData, error: profileError } = await supabase
        .from('user_profiles')
        .insert([
          {
            id: authData.user.id,
            email: testEmail,
            first_name: 'Test',
            last_name: 'User',
            is_admin: false
          }
        ])
        .select();

      if (profileError) {
        console.log('‚ùå Profil olu≈üturma hatasƒ±:', profileError.message);
      } else {
        console.log('‚úÖ Profil olu≈üturuldu:', profileData);
      }
    }

    // 3. Olu≈üturulan kullanƒ±cƒ±larƒ± kontrol et
    console.log('\nüìä G√ºncel kullanƒ±cƒ± sayƒ±sƒ± kontrol ediliyor...');
    
    const { data: profiles, error: profilesError } = await supabase
      .from('user_profiles')
      .select('*');
    
    if (profilesError) {
      console.log('‚ùå Profil listesi alƒ±namadƒ±:', profilesError.message);
    } else {
      console.log('‚úÖ Toplam profil sayƒ±sƒ±:', profiles.length);
      if (profiles.length > 0) {
        console.log('üë• Kullanƒ±cƒ±lar:');
        profiles.forEach((profile, index) => {
          console.log(`   ${index + 1}. ${profile.first_name} ${profile.last_name} (${profile.email})`);
          console.log(`      - Admin: ${profile.is_admin ? '‚úÖ' : '‚ùå'}`);
        });
      }
    }

  } catch (err) {
    console.log('‚ùå Beklenmeyen hata:', err.message);
  }
}

testRegistration();